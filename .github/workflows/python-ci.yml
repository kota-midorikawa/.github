name: python-ci (reusable)

on:
  workflow_call:
    inputs:
      python-version:
        type: string
        required: false
        default: '["3.10","3.11","3.12"]'
permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(inputs.python-version) }}
    steps:
      - uses: actions/checkout@v4
      - name: Ensure LICENSE files exist
        shell: bash
        run: |
          set -euo pipefail
          if [[ ! -f LICENSE && ! -f LICENSE.txt && ! -f LICENSE.md ]]; then
            echo "::error file=LICENSE::Missing LICENSE for docs. Add LICENSE (e.g., CC BY 4.0 or MIT)."
            exit 1
          fi
          
          if git ls-files | grep -E '\.(py|ipynb|js|ts|go|rs|java|kt|cpp|c|cc|h|hpp|cs|rb|php|sh|ps1|lua|r|m|swift|scala|dart)$' >/dev/null; then
            if [[ ! -f LICENSE-CODE ]]; then
              echo "::error file=LICENSE-CODE::Missing LICENSE-CODE for code (e.g., MIT or Apache-2.0)."
              exit 1
            fi
          fi
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          # cache: pip
      - run: pip install -U pip wheel
      - name: Detect tests
        id: testcheck
        shell: bash
        run: |
          if git ls-files | grep -E '(^|/)(test_.*\.py|tests/.*\.py)$' >/dev/null; then
            echo "has_tests=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_tests=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Ensure pytest is available
        if: ${{ steps.testcheck.outputs.has_tests == 'true' }}
        run: pip install -U pytest
      - name: Run pytest
        if: ${{ steps.testcheck.outputs.has_tests == 'true' }}
        run: pytest -q
